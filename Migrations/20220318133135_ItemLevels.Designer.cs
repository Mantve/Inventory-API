// <auto-generated />
using System;
using Inventory_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Inventory_API.Migrations
{
    [DbContext(typeof(RestContext))]
    [Migration("20220318133135_ItemLevels")]
    partial class ItemLevels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Inventory_API.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorUsername")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorUsername");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Inventory_API.Data.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorUsername")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("ListId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorUsername");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ListId");

                    b.HasIndex("RoomId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Inventory_API.Data.Entities.List", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username");

                    b.ToTable("Lists");
                });

            modelBuilder.Entity("Inventory_API.Data.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorUsername")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorUsername");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Inventory_API.Data.Entities.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Username1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Username");

                    b.HasIndex("RoomId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.HasIndex("Username1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Inventory_API.Data.Entities.Category", b =>
                {
                    b.HasOne("Inventory_API.Data.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorUsername");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Inventory_API.Data.Entities.Item", b =>
                {
                    b.HasOne("Inventory_API.Data.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorUsername");

                    b.HasOne("Inventory_API.Data.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Inventory_API.Data.Entities.Item", null)
                        .WithMany("Items")
                        .HasForeignKey("ItemId");

                    b.HasOne("Inventory_API.Data.Entities.List", null)
                        .WithMany("Items")
                        .HasForeignKey("ListId");

                    b.HasOne("Inventory_API.Data.Entities.Room", "Room")
                        .WithMany("Items")
                        .HasForeignKey("RoomId");

                    b.Navigation("Author");

                    b.Navigation("Category");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Inventory_API.Data.Entities.List", b =>
                {
                    b.HasOne("Inventory_API.Data.Entities.User", null)
                        .WithMany("Lists")
                        .HasForeignKey("Username");
                });

            modelBuilder.Entity("Inventory_API.Data.Entities.Room", b =>
                {
                    b.HasOne("Inventory_API.Data.Entities.User", "Author")
                        .WithMany("Rooms")
                        .HasForeignKey("AuthorUsername");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Inventory_API.Data.Entities.User", b =>
                {
                    b.HasOne("Inventory_API.Data.Entities.Room", null)
                        .WithMany("SharedWith")
                        .HasForeignKey("RoomId");

                    b.HasOne("Inventory_API.Data.Entities.User", null)
                        .WithMany("Friends")
                        .HasForeignKey("Username1");
                });

            modelBuilder.Entity("Inventory_API.Data.Entities.Item", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Inventory_API.Data.Entities.List", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Inventory_API.Data.Entities.Room", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("SharedWith");
                });

            modelBuilder.Entity("Inventory_API.Data.Entities.User", b =>
                {
                    b.Navigation("Friends");

                    b.Navigation("Lists");

                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
